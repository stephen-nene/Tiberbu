# Generated by Django 5.1.6 on 2025-03-29 20:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import profiles.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('doctor', 'Doctor'), ('patient', 'Patient'), ('nurse', 'Nurse'), ('user', 'User')], db_index=True, default='user', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deactivated', 'Deactivated')], db_index=True, default='inactive', max_length=255)),
                ('address', models.JSONField(blank=True, null=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=12, null=True, unique=True)),
                ('token', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='tracker_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='tracker_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('image', models.ImageField(upload_to=profiles.models.user_directory_path)),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the image', null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='profiles.user')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A_POSITIVE', 'A+'), ('A_NEGATIVE', 'A-'), ('B_POSITIVE', 'B+'), ('B_NEGATIVE', 'B-'), ('AB_POSITIVE', 'AB+'), ('AB_NEGATIVE', 'AB-'), ('O_POSITIVE', 'O+'), ('O_NEGATIVE', 'O-')], max_length=20, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='profile_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profiles.image'),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='profiles.user')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=20, null=True)),
                ('license_number', models.CharField(db_index=True, max_length=255, unique=True)),
                ('experience', models.PositiveIntegerField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('fees', models.PositiveIntegerField(blank=True, null=True)),
                ('specialization', models.ManyToManyField(related_name='doctors', to='management.specialization')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='profiles_us_usernam_690429_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='profiles_us_email_e41b23_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='profiles_us_role_7e41dc_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='profiles_us_status_b3fcd5_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['license_number'], name='profiles_do_license_af7df6_idx'),
        ),
    ]
