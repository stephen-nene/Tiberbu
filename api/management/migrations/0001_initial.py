# Generated by Django 5.1.6 on 2025-03-30 09:18

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_time', models.DateTimeField(validators=[django.core.validators.MinValueValidator(django.utils.timezone.now)])),
                ('is_admin_override', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('in_progress', 'In Progress')], default='scheduled', max_length=20)),
                ('chief_complaint', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'verbose_name': 'Clinical Appointment',
                'verbose_name_plural': 'Clinical Appointments',
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('weekday', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_recurring', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('override_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Clinician Availability',
                'verbose_name_plural': 'Clinician Availabilities',
                'ordering': ['weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ClinicalAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.UUIDField()),
                ('file', models.FileField(upload_to='clinical_attachments/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'dcm'])])),
                ('document_type', models.CharField(choices=[('lab_report', 'Lab Report'), ('xray', 'X-Ray'), ('prescription', 'Prescription'), ('report', 'Report'), ('image', 'Image'), ('other', 'Other')], max_length=50)),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_sensitive', models.BooleanField(default=False)),
                ('access_audit', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'Clinical Document',
                'verbose_name_plural': 'Clinical Documents',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the specialization (e.g., Cardiology, Neurology)', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('is_surgical', models.BooleanField(default=False)),
                ('is_primary_care', models.BooleanField(default=False)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='specialization_icons/')),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('average_consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('icd11_code', models.CharField(blank=True, max_length=10, null=True)),
                ('snomed_ct_id', models.CharField(blank=True, max_length=10, null=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Clinical Specialty',
                'verbose_name_plural': 'Clinical Specialties',
            },
        ),
    ]
